service : {
    http_request: (record { 
        url: text; 
        method: text; 
        body: vec nat8; 
        headers: vec record { text; text }; 
        certificate_version: opt nat16 
    }) -> (record { 
        body: vec nat8; 
        headers: vec record { text; text }; 
        upgrade: opt bool; 
        streaming_strategy: opt variant { 
            Callback: record { 
                token: vec nat8; 
                callback: func (vec nat8) -> (opt record { token: opt vec nat8; body: vec nat8 }) query 
            } 
        }; 
        status_code: nat16 
    }) query;
    
    http_request_update: (record { 
        url: text; 
        method: text; 
        body: vec nat8; 
        headers: vec record { text; text } 
    }) -> (record { 
        body: vec nat8; 
        headers: vec record { text; text }; 
        upgrade: opt bool; 
        streaming_strategy: opt variant { 
            Callback: record { 
                token: vec nat8; 
                callback: func (vec nat8) -> (opt record { token: opt vec nat8; body: vec nat8 }) query 
            } 
        }; 
        status_code: nat16 
    });

    create_box: (text) -> (record {status: nat16; NewBox: Box});
    get_all_boxes: () -> (record {status: nat16; AllBox: vec Box});
    update_box: (text, text) -> (record {status: nat16; message: text});
    get_box: (text) -> (record {status: nat16; Box: Box});
    delete_box: (text) -> (record {status: nat16; message: text});
    create_and_add_book: (text, text, text, text, float64) -> (record {status: nat16; message: text});
    remove_book_from_box: (text, text) -> (record {status: nat16; message: text});
    add_existing_book_to_box: (text, text) -> (record {status: nat16; message: text});
    get_all_books: () -> (record {status: nat16; AllBooks: vec Book});
    get_book: (text) -> (record {status: nat16; Book: Book});
    delete_book: (text) -> (record {status: nat16; message: text});
    update_book: (text, record {Title: text; Description: text; Author: text; Price: float64}) -> (record {status: nat16; message: text});
    search_book_in_box: (text) -> (record {status: nat16; message: text});
}